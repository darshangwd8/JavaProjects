package com.personal.main.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.personal.main.model.Student;
import com.personal.main.repository.StudentRepository;
import com.personal.main.service.StudentService;

@Controller
@RequestMapping("/grades")
public class StudentConroller {
	
	@Autowired
	private final StudentRepository studentRepository;

	@GetMapping("/grade-list")
	public List<Student> getUsers(){
		return studentRepository.getAllUsers();
		
	}
	
	@GetMapping("/delete/{id}")
	public String deleteStudent(@PathVariable Long id) {
		studentRepository.deleteStudent(id);
		return "redirect:/students";
	}
	
	@PostMapping("/save-grade")
	public String savestudent(@RequestParam("studentId") String studentId,
            @RequestParam("midtermGrade") int midtermGrade,
            @RequestParam("labGrade") int labGrade,
            @RequestParam("finalGrade") int finalGrade,
            Model model) {
		
		// Validate the input values
        if (midtermGrade < 0 || midtermGrade > 100 ||
            labGrade < 0 || labGrade > 100 ||
            finalGrade < 0 || finalGrade > 100 ||
            studentId.length() != 7) {
            model.addAttribute("error", "Invalid grade values or student ID length!");
            return "grade-entry-form";
        }

        // Create a new Student object
        Student student = new Student();
        student.setStuentId(studentId);
        student.setMidtermGrade(midtermGrade);
        student.setLabGrade(labGrade);
        student.setFinalGraded(finalGrade);

        // Save the student object to the database
        studentRepository.save(student);

		return "redirect:/enter-grade";
	}
	
	@GetMapping("/enter-grade")
	public String studentForm() {
		return "enter-grade";
	}
}
